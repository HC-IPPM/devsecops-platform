name: e2e

on:
  workflow_dispatch:
  push:
    branches: [ 'main', 'release/**' ]
    paths: [ 'kubernetes/components/**', 'kubernetes/clusters/**' ]
  pull_request:
    branches: [ 'main', 'release/**' ]
    paths: [ 'kubernetes/components/**', 'kubernetes/clusters/**' ]
jobs:
  e2e-platform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Setup fluxcli
        uses: fluxcd/flux2/action@main
        # https://cloud.google.com/service-mesh/v1.20/docs/downloading-istioctl#linux
      - name: Setup asm istioctl
        run: |
          curl -LO https://storage.googleapis.com/gke-release/asm/istio-1.21.3-asm.3-linux-amd64.tar.gz
          curl -LO https://storage.googleapis.com/gke-release/asm/istio-1.21.3-asm.3-linux-amd64.tar.gz.1.sig
          openssl dgst -verify /dev/stdin -signature istio-1.21.3-asm.3-linux-amd64.tar.gz.1.sig istio-1.21.3-asm.3-linux-amd64.tar.gz <<'EOF'
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEWZrGCUaJJr1H8a36sG4UUoXvlXvZ
          wQfk16sxprI2gOJ2vFFggdq3ixF2h4qNBt0kI7ciDhgpwS8t+/960IsIgw==
          -----END PUBLIC KEY-----
          EOF
          tar xzf istio-1.21.3-asm.3-linux-amd64.tar.gz
          echo "$PWD/istio-1.21.3-asm.3/bin" >> $GITHUB_PATH
      - name: Setup kind
        uses: helm/kind-action@0025e74a8c7512023d06dc019c617aa3cf561fde # v1.10.0
        with:
          cluster_name: e2e-platform
          wait: 5s
      - name: Install flux and istio in kind
        run: |
          flux install
          istioctl install -y --set profile=minimal --set meshConfig.accessLogFile=/dev/stdout
      - name: Setup cluster reconciliation
        run: |
          flux create source git flux-system \
          --url=${{ github.event.repository.html_url }} \
          --branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}} \
          --username=${GITHUB_ACTOR} \
          --password=${{ secrets.GITHUB_TOKEN }} \
          --ignore-paths="kubernetes/clusters/**/flux-system/"
          flux create kustomization flux-system \
          --source=flux-system \
          --path=./kubernetes/clusters/kind
      - name: Verify cluster reconciliation
        run: |
          kubectl -n flux-system wait kustomization/infra-controllers --for=condition=ready --timeout=5m
          kubectl -n flux-system wait kustomization/apps --for=condition=ready --timeout=20m
      - name: Debug failure
        if: failure()
        run: |
          kubectl -n flux-system get all
          kubectl -n flux-system logs deploy/source-controller
          kubectl -n flux-system logs deploy/kustomize-controller
          kubectl -n flux-system logs deploy/helm-controller
          flux get all --all-namespaces
